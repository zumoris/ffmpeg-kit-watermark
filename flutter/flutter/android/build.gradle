// Проверка, установлен ли Maven
def checkMavenInstallation() {
    try {
        def process = "mvn -version".execute()
        process.waitFor()
        if (process.exitValue() != 0) {
            throw new Exception("Maven is not installed.")
        }
        println "Maven is installed. Version info:"
        println process.text
    } catch (Exception e) {
        println "Maven is not installed or not found in PATH."
        println "Please install Maven using one of the following commands:"
        if (System.getProperty("os.name").toLowerCase().contains("mac")) {
            println "  brew install maven"
        } else if (System.getProperty("os.name").toLowerCase().contains("win")) {
            println "Download and install Maven from https://maven.apache.org/download.cgi"
        } else if (System.getProperty("os.name").toLowerCase().contains("nux") ||
                   System.getProperty("os.name").toLowerCase().contains("nix")) {
            println "  sudo apt-get install maven"
        } else {
            println "Please install Maven manually."
        }
        throw new GradleException("Maven is required but not installed.")
    }
}

// Вызов проверки перед сборкой
checkMavenInstallation()


// Установка AAR файла в локальный Maven-репозиторий
def installAarToLocalMaven(String aarFilePath, String groupId, String artifactId, String version) {
    checkMavenInstallation()

    try {
        // Команда для установки AAR файла в локальный Maven-репозиторий
        def command = "mvn install:install-file -Dfile=${aarFilePath} -DgroupId=${groupId} -DartifactId=${artifactId} -Dversion=${version} -Dpackaging=aar -DgeneratePom=true"
        def process = command.execute()
        process.waitFor()
        
        if (process.exitValue() != 0) {
            throw new Exception("Failed to install AAR file to local Maven repository.")
        }
        
        println "Successfully installed ${aarFilePath} to local Maven repository."
    } catch (Exception e) {
        println "Error during Maven install: ${e.message}"
        throw new GradleException("Failed to install AAR file to local Maven repository.")
    }
}

def aarFilePath = new File(project.projectDir, '../../../prebuilt/bundle-android-aar/ffmpeg-kit/ffmpeg-kit.aar').absolutePath

println('AAR file path: ' + aarFilePath + '\n')


// Пример использования функции
installAarToLocalMaven(aarFilePath, 'com.arthenica.ffmpegkit', 'ffmpeg-kit', '1.0.0')

buildscript {
    repositories {
        mavenLocal() 
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.0'
    }
}

rootProject.allprojects {
    repositories {
        mavenLocal() 
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    // Conditional for compatibility with AGP <4.2.
    if (project.android.hasProperty("namespace")) {
        namespace 'com.arthenica.ffmpegkit.flutter'
    }

    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 603
        versionName "6.0.3"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    lintOptions {
        disable 'GradleCompatible'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'com.arthenica.ffmpegkit:ffmpeg-kit:1.0.0'
}
